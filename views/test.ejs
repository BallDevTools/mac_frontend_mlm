<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <form id="callContractForm">
      <input type="text" name="param1" id="param1" placeholder="Parameter 1" value="" />
      <input type="text" name="param2" id="param2" placeholder="Parameter 2" value="" />
      <button type="submit">Call Contract</button>
    </form>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
      $( document ).ready(function() {
      if (typeof window.ethereum !== "undefined") {
        console.log("MetaMask is installed!");
      }
      async function connectWallet() {
        try {
          const accounts = await window.ethereum.request({
            method: "eth_requestAccounts",
          });
          localStorage.setItem("Address_Wallet", accounts[0]);
          console.log("Connected", accounts[0]);
        } catch (error) {
          console.error("Error connecting to MetaMask", error);
        }
      }
      connectWallet();s
      const form = document.getElementById("callContractForm");
      form.addEventListener("submit", async (event) => {
        event.preventDefault();

        // Get connected wallet address (assuming MetaMask is connected)
        const { ethereum } = window;
        const address = await ethereum.request({
          method: "eth_requestAccounts",
        })[0];

        try {
          const response = await fetch(
            "/api/test",
            {
              method: "POST",
              body: { address: address, level: 1 },
              headers: { "Content-Type": "application/json" },
            }
              .then((res) => {
                console.log(res);
              })
              .catch((error) => {
                console.error(error);
              })
          );
        } catch (error) {
          console.error(error);
        }
      });
    });
    </script>
  </body>
</html>
